// --- 1. –Ü–º–ø–æ—Ä—Ç–∏ (Imports) ---
// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ Express –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞.
const express = require('express');
// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ MongoClient –∑ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ–≥–æ –¥—Ä–∞–π–≤–µ—Ä–∞ MongoDB –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.
const { MongoClient } = require('mongodb');

// --- 2. –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è (Configuration) ---
// –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –¥–æ–¥–∞—Ç–∫—É Express.
const app = express();
// –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ä—Ç, –Ω–∞ —è–∫–æ–º—É –±—É–¥–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –Ω–∞—à —Å–µ—Ä–≤—ñ—Å.
const PORT = 3002;

// URL –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –Ω–∞—à–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö MongoDB.
// "mongodb://localhost:27017" - —Ü–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –∞–¥—Ä–µ—Å–∞, —è–∫—â–æ MongoDB –∑–∞–ø—É—â–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ.
// –£ Docker-—Å–µ—Ä–µ–¥–æ–≤–∏—â—ñ —Ç—É—Ç –±—É–¥–µ —ñ–º'—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ "mongodb://mongodb:27017".
const MONGO_URL = 'mongodb://user-db:27017';
// –ù–∞–∑–≤–∞ –Ω–∞—à–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.
const DB_NAME = 'user_db';

// --- 3. Middleware ---
// –î–æ–¥–∞—î–º–æ –≤–±—É–¥–æ–≤–∞–Ω–∏–π –≤ Express middleware –¥–ª—è —Ä–æ–∑–±–æ—Ä—É JSON-—Ç—ñ–ª –∑–∞–ø–∏—Ç—ñ–≤.
// –¶–µ –¥–æ–∑–≤–æ–ª–∏—Ç—å –Ω–∞–º –ª–µ–≥–∫–æ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ –∑ POST-–∑–∞–ø–∏—Ç—ñ–≤, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –≤—ñ–¥ auth-service.
app.use(express.json());

// --- 4. –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —Ç–∞ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ---
// –û–≥–æ–ª–æ—à—É—î–º–æ –∑–º—ñ–Ω–Ω—É –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –æ–±'—î–∫—Ç—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö, —â–æ–± –≤—ñ–Ω –±—É–≤ –¥–æ—Å—Ç—É–ø–Ω–∏–π —É –≤—Å—å–æ–º—É –¥–æ–¥–∞—Ç–∫—É.
let db;

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB —ñ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞.
async function startServer() {
  try {
    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞ –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB.
    const client = new MongoClient(MONGO_URL);
    // –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞ MongoDB.
    await client.connect();
    console.log('‚úÖ –£—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB');

    // –û—Ç—Ä–∏–º—É—î–º–æ –¥–æ—Å—Ç—É–ø –¥–æ –Ω–∞—à–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö. –Ø–∫—â–æ —ó—ó –Ω–µ–º–∞—î, MongoDB —Å—Ç–≤–æ—Ä–∏—Ç—å —ó—ó –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.
    db = client.db(DB_NAME);

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä Express, —â–æ–± –≤—ñ–Ω –ø–æ—á–∞–≤ –ø—Ä–∏–π–º–∞—Ç–∏ –∑–∞–ø–∏—Ç–∏.
    // C–µ—Ä–≤–µ—Ä —Å—Ç–∞—Ä—Ç—É—î —Ç—ñ–ª—å–∫–∏ –ü–Ü–°–õ–Ø —É—Å–ø—ñ—à–Ω–æ–≥–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î.
    app.listen(PORT, () => {
      console.log(`üöÄ –°–µ—Ä–≤—ñ—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    });
  } catch (err) {
    // –Ø–∫—â–æ —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î, –≤–∏–≤–æ–¥–∏–º–æ —ó—ó –≤ –∫–æ–Ω—Å–æ–ª—å —ñ –∑–∞–≤–µ—Ä—à—É—î–º–æ –ø—Ä–æ—Ü–µ—Å.
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB:', err);
    process.exit(1);
  }
}

// --- 5. –ï–Ω–¥–ø–æ—ñ–Ω—Ç–∏ (API Endpoints) ---

// –ö–æ—Ä–µ–Ω–µ–≤–∏–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω–æ—Å—Ç—ñ —Å–µ—Ä–≤—ñ—Å—É.
app.get('/', (req, res) => {
  res.send('Hello from User Service! üëã');
});

/**
 * –ï–Ω–¥–ø–æ—ñ–Ω—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
 * –û—á—ñ–∫—É—î—Ç—å—Å—è, —â–æ —Ü–µ–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –±—É–¥–µ –≤–∏–∫–ª–∏–∫–∞–Ω–∏–π —Å–µ—Ä–≤—ñ—Å–æ–º –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó (auth-service)
 * –ø—ñ—Å–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
 */
app.post('/users', async (req, res) => {
  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö.
  if (!db) {
    return res.status(500).json({ message: '–ü–æ–º–∏–ª–∫–∞: –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∞.' });
  }

  try {
    // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ —Ç—ñ–ª–∞ –∑–∞–ø–∏—Ç—É.
    const { authId, phone, name, balance } = req.body;

    // --- –í–∞–ª—ñ–¥–∞—Ü—ñ—è –≤—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö ---
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–µ—Ä–µ–¥–∞–Ω—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è.
    if (!authId || !phone || !name) {
      console.log('–ü–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó: –≤—ñ–¥—Å—É—Ç–Ω—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è', req.body);
      return res.status(400).json({ message: '–ü–æ–ª—è "authId", "phone" —Ç–∞ "name" —î –æ–±–æ–≤\'—è–∑–∫–æ–≤–∏–º–∏.' });
    }

    // --- –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ---
    // –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ –ë–î.
    const newUser = {
      authId: authId, // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ authId –∑ auth-service —è–∫ auth_id –¥–ª—è —á—ñ—Ç–∫–æ—Å—Ç—ñ.
      name: name,
      phone: phone,
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–µ—Ä–µ–¥–∞–Ω–æ –±–∞–ª–∞–Ω—Å. –Ø–∫—â–æ –Ω—ñ, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ 0 –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º.
      balance: balance !== undefined ? balance : 0,
      createdAt: new Date(), // –î–æ–¥–∞—î–º–æ –¥–∞—Ç—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–ª—è –∞—É–¥–∏—Ç—É.
    };

    console.log('–°–ø—Ä–æ–±–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', newUser);

    // --- –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ –ë–î ---
    // –û—Ç—Ä–∏–º—É—î–º–æ –¥–æ—Å—Ç—É–ø –¥–æ –∫–æ–ª–µ–∫—Ü—ñ—ó 'users'. –Ø–∫—â–æ —ó—ó –Ω–µ–º–∞—î, –≤–æ–Ω–∞ –±—É–¥–µ —Å—Ç–≤–æ—Ä–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.
    const usersCollection = db.collection('users');
    // –í—Å—Ç–∞–≤–ª—è—î–º–æ –Ω–æ–≤–∏–π –¥–æ–∫—É–º–µ–Ω—Ç (–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞) –≤ –∫–æ–ª–µ–∫—Ü—ñ—é.
    const result = await usersCollection.insertOne(newUser);

    console.log(`‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ –∑ ID: ${result.insertedId}`);

    // --- –í—ñ–¥–ø–æ–≤—ñ–¥—å –∫–ª—ñ—î–Ω—Ç—É ---
    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º 201 (Created) —ñ –¥–∞–Ω–∏–º–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    res.status(201).json(newUser);

  } catch (error) {
    // –û–±—Ä–æ–±–∫–∞ –º–æ–∂–ª–∏–≤–∏—Ö –ø–æ–º–∏–ª–æ–∫ –ø—ñ–¥ —á–∞—Å –∑–∞–ø–∏—Å—É –≤ –ë–î.
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
    res.status(500).json({ message: '–í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.' });
  }
});

// --- 6. –ó–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É ---
// –í–∏–∫–ª–∏–∫–∞—î–º–æ –Ω–∞—à—É –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è —Å—Ç–∞—Ä—Ç—É –≤—Å—å–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—É.
startServer();