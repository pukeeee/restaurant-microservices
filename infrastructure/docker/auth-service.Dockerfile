# Використовуємо офіційний образ Python 3.11.
# slim-bullseye - це хороший компроміс між розміром та наявністю потрібних інструментів.
FROM python:3.11-slim-bullseye

# Встановлюємо робочу директорію всередині контейнера.
# Всі наступні команди будуть виконуватися відносно цього шляху.
WORKDIR /app

# Копіюємо спочатку тільки файл із залежностями.
# Docker кешує цей крок. Якщо файл не змінився, Docker не буде повторно встановлювати залежності.
COPY requirements.txt .

# Встановлюємо залежності, вказані в requirements.txt.
# --no-cache-dir - не зберігати кеш, щоб зменшити розмір образу.
# --upgrade pip - оновлюємо pip до останньої версії.
RUN pip install --no-cache-dir --upgrade pip -r requirements.txt

# Копіюємо решту коду нашого додатку в робочу директорію.
COPY . .

# Повідомляємо Docker, що наш додаток буде працювати на порту 8000.
# FastAPI/Uvicorn за замовчуванням використовують цей порт.
EXPOSE 8000

# Команда для запуску додатку.
# uvicorn main:app --host 0.0.0.0 --port 8000
# main:app - вказує uvicorn знайти об'єкт `app` у файлі `main.py`.
# --host 0.0.0.0 - робить сервер доступним ззовні контейнера.
# --port 8000 - вказує порт для прослуховування.
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
