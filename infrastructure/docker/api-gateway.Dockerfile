# === Етап 1: Збірка ===
# Використовуємо офіційний образ Go як "будівельника".
# Alpine - це дуже маленький дистрибутив Linux, що робить образи меншими.
FROM golang:1.25-alpine AS builder

# Встановлюємо робочу директорію всередині контейнера
WORKDIR /app

# Копіюємо файли go.mod та go.sum для завантаження залежностей
# Це кешується Docker, тому залежності не будуть завантажуватися щоразу, якщо вони не змінились.
COPY go.* ./
RUN go mod download

# Копіюємо решту вихідного коду нашого сервісу
COPY . .

# Збираємо наш додаток.
# CGO_ENABLED=0 вимикає використання зовнішніх бібліотек C, що робить бінарний файл повністю статичним.
# -o /app/api-gateway - вказує, куди покласти скомпільований файл.
RUN CGO_ENABLED=0 go build -o /app/api-gateway ./cmd/api-gateway


# === Етап 2: Запуск ===
# Використовуємо мінімальний базовий образ Alpine для фінального контейнера.
FROM alpine:latest

# Копіюємо ТІЛЬКИ скомпільований бінарний файл зі стадії "builder".
COPY --from=builder /app/api-gateway /api-gateway

# Повідомляємо Docker, що контейнер буде слухати порт 8080
EXPOSE 8080

# Команда, яка буде виконана при запуску контейнера.
# Запускаємо наш скомпільований додаток.
ENTRYPOINT ["/api-gateway"]
